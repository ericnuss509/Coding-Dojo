/// // Asked in "Python interview with a LinkedIn engineer: Matching pairs": https://youtu.be/wBXZD436JAg

// /*
//   Given an array of integers, return indices of the two numbers such that they add up to a specific target.
//   You may assume that each input would have exactly one solution, and you may not use the same element twice.
//   Bonus: Make it O(n) time
// */

// const nums1 = [2, 11, 7, 15];
// const targetSum1 = 9;
// const expected1 = [0, 2];

// const nums2 = [11, 3, 5, 33, 8];
// const targetSum2 = 13;
// const expected2 = [2, 4];

// // Order doesn't matter. Explanation: nums[0] + nums[2] = 2 + 7 = 9

// /**
//  * Finds the indexes of the nums that add up to the given target sum.
//  * - Time: O(?).
//  * - Space: O(?).
//  * @param {Array<number>} nums Unordered nums.
//  * @param {number} targetSum
//  * @returns {Array<number>} The two indexes of the numbers in the given nums
//  *    that add up to the targetSum.
//  */
// function twoSum(nums, targetSum) {
//   let newArray = [];
//   for(let i = 0; i < nums.length; i++) {
//     for(let j = i+1; j < nums.length; j++) {
//       if(nums[i] + nums[j] == targetSum) {
//         newArray.push(i, j);
//       }
//     }
//   }
//   return newArray;
// }

// console.log(twoSum(nums2, targetSum2));